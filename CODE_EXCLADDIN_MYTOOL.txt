Dim RW


 
Sub MANUALcalculation()
    Application.Calculation = xlCalculationManual
End Sub
 Sub autoCalculation()
    Application.Calculation = xlCalculationAutomatic
End Sub

Public Function ReadAcrobatDocument(strFileName As String) As String
  'Note: A Reference to the Adobe Library must be set in Tools|References!
  Dim AcroApp As CAcroApp, AcroAVDoc As CAcroAVDoc, AcroPDDoc As CAcroPDDoc
  Dim AcroHiliteList As CAcroHiliteList, AcroTextSelect As CAcroPDTextSelect
  Dim PageNumber, PageContent, Content, i, j
  Set AcroApp = CreateObject("AcroExch.App")
  Set AcroAVDoc = CreateObject("AcroExch.AVDoc")
  If AcroAVDoc.Open(strFileName, vbNull) <> True Then Exit Function
  ' The following While-Wend loop shouldn't be necessary but timing issues may occur.
  While AcroAVDoc Is Nothing
    Set AcroAVDoc = AcroApp.GetActiveDoc
  Wend
  Set AcroPDDoc = AcroAVDoc.GetPDDoc
  i = 0
    Set PageNumber = AcroPDDoc.AcquirePage(i)
    Set PageContent = CreateObject("AcroExch.HiliteList")
    If PageContent.Add(0, 19000) <> True Then Exit Function
    Set AcroTextSelect = PageNumber.CreatePageHilite(PageContent)
    ' The next line is needed to avoid errors with protected PDFs that can't be read
    On Error Resume Next
    For j = 0 To AcroTextSelect.GetNumText - 1
      Content = Content & AcroTextSelect.GetText(j)
    Next j
   
  ReadAcrobatDocument = Content
  AcroAVDoc.Close True
  AcroApp.Exit
  Set AcroAVDoc = Nothing: Set AcroApp = Nothing
End Function

Function getColorIndex(rng As Range)
        getColorIndex = rng.Interior.ColorIndex
  
End Function
Sub FILLDATES()
    c = 9
    MSTDATE = CDate(InputBox("15-JAN-2019"))
    TEndDate = MSTDATE + (3 * 365)
    DGap = 15
    
    Do While MSTDATE <= TEndDate
        
            Cells(6, c) = MSTDATE
            c = c + 1
            If Day(MSTDATE) = 15 Then
                  m = Month(MSTDATE)
                  Do While m = Month(MSTDATE)
                        MSTDATE = MSTDATE + 1
                  Loop
                  MSTDATE = MSTDATE - 1
            Else
                 MSTDATE = MSTDATE + 1
                 MSTDATE = DateValue("15-" & Mid(MonthName(Month(MSTDATE)), 1, 3) & "-" & Year(MSTDATE))
            End If
    Loop
                  
           
             
  
End Sub
Sub PASTETEXT()
    Dim CL As Range
    For Each CL In Selection
            v = "'" & CL.value
            CL.value = v
    Next CL
    Set CL = Nothing
    
End Sub

Sub removePDFExtension()
    Dim CL As Range
    Application.Calculation = xlCalculationManual
    For Each CL In Selection
            v = Replace(UCase(CL.value), ".PDF", "")
            
            v = Replace(v, "-A", "")
            v = Replace(v, "-X", "")
             v = Replace(v, "-B", "")
              v = Replace(v, "-C", "")
            If InStr(1, v, "(") > 0 Then
                v = Mid(v, 1, InStr(1, v, "(") - 1)
            End If
            CL.value = Trim(v)
    Next CL
     Application.Calculation = xlCalculationAutomatic
    Set CL = Nothing
    
End Sub


Sub RemoveUptoChar()
    tchr = InputBox("Enter Character upto which?", "", "_")
    
    Dim CL As Range
    Application.Calculation = xlCalculationManual
    For Each CL In Selection
            v = UCase(CL.value)
            
            If InStr(1, v, tchr) > 0 Then
                v = Mid(v, 1, InStr(1, v, tchr) - 1)
            End If
            CL.value = Trim(v)
    Next CL
   Application.Calculation = xlCalculationAutomatic
    Set CL = Nothing
    
End Sub

Sub SEND_MAIL_HICTIME_dEFAULTERS()

    If ActiveWorkbook.ActiveSheet.Name <> "Defaulter Employee List" Then
        End
    End If
code = InputBox("Enter COde for sending REport to Discipline with CC to PM/PC")
If code <> "2210" Then
        End
End If
 

 
 

'For Tips see: http://www.rondebruin.nl/win/winmail/Outlook/tips.htm
'Working in Office 2000-2016
    Dim OutApp As Outlook.Application
    Dim OutMail As Object
    Dim strbody As String

    Set OutApp = CreateObject("Outlook.Application")
    
    rno = 7
    
    Dim sh1 As Worksheet
    
    

    Set sh1 = ActiveWorkbook.ActiveSheet
    
    
    mySignature = "<BR>Thanks & Regards <BR> Autogenerated Email"
    fonttxt = "<font face='arial' size='2'>"
    fonttxthdr = "<font face='arial' size='2' color=white>"
    tsPeriod = sh1.Cells(6, 9)
    Do While True
            If sh1.Cells(rno, 1) = 0 Then
                    Exit Do
            End If
           
            no_docs = sh1.Cells(rno, 10)
            If no_docs > 0 Then
                    Days = sh1.Cells(rno, 9)
                    toEmailIds = "george.i@larsentoubro.com" 'sh1.Cells(rno, 5)
                     subj = "HIC TimeSheet Pending for Mr. " & sh1.Cells(rno, 3) & " for " & tsPeriod
                    strbody = "<font face='arial' size='2' color='black'>Dear Mr. " & sh1.Cells(rno, 3) & "<p>"
                    
                    strbody = strbody & "<font face='arial' size='2' color='black'> Time Sheet is not filled  for  following  " & no_docs & " Days between  " & tsPeriod & "<P><BR>"
                    strbody = strbody & "<font face='arial' size='6' color='black'> Dates  - " & Days & "<P>"
                    strbody = strbody & "<BR><font face='arial' size='3' color='black'>Link : <a href='http://hictime.lnthydrocarbon.com'>http://hictime.lnthydrocarbon.com</a><BR><br>"
                    strbody = strbody & "<font face='arial' size='3' color='gray'>Please ignore if already filled !</font><br>"
    
                      
                    
                        Set OutMail = OutApp.CreateItem(0)
                        With OutMail
                            .To = toEmailIds
                            '.CC = "stiwari@larsentoubro.com"
                            .BCC = ""
                            .Subject = subj
                            
                            .HTMLBody = strbody & "<BR>" & mySignature
                            
                            'You can add a file like this
                            '.Attachments.Add ("C:\test.txt")
                             .Send   'or use .Display
                        End With
                        Set OutMail = Nothing
                     
             End If
            rno = rno + 1
    Loop
    
    
   
   Set sh1 = Nothing
   
     
    Set OutMail = Nothing
    Set OutApp = Nothing
    Set sh1 = Nothing
    Set sh2 = Nothing
 
End Sub
Sub PUT_HEADINGS_PUNCHLIST()
        RW = 1
        LASTHEAD = ""
        Do While True
        
            If Cells(RW, 1) = 0 Then
                    Exit Do
            End If
            If Cells(RW, 1).Font.Underline = True Then
                LASTHEAD = Cells(RW, 1)
            Else
                Cells(RW, 2) = LASTHEAD
            End If
            RW = RW + 1
         Loop
            
            
            
End Sub

Sub ExtractWhatsAppMessages()
    
      
    
    txtfile = InputBox("Enter Path :", "WhatsAppMsgs", "C:\GeorgeDocs\002. GC17\SHUTDOWN-3 DAILY REPORT\WHATSAPP.txt")
    If Len(txtfile) = 0 Then
            End
    End If
    
    
    Dim fs As Scripting.FileSystemObject
    Dim fl As Scripting.TextStream
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set fl = fs.OpenTextFile(txtfile, ForReading)
    
    txtline = fl.ReadAll
    
    
    
    Ln = Len(txtline)
    rno = 5
    For pos = 1 To Ln
        
    
    
    Next pos
    fl.Close
    Set fl = Nothing
    Set fs = Nothing
    
            
  
    
End Sub
Sub PutHyperLink()
    MasterPath = ".\DATS\"
    ColSubFOlder = 19
    linkCol = 3
    StartRow = 13
    Do While True
            If Cells(StartRow, 1) = 0 Then
                    Exit Do
            End If
            If Cells(StartRow, ColSubFOlder) <> 0 Then
                  If Cells(StartRow, linkCol) <> 0 Then
                         LnkFl = Cells(StartRow, linkCol) & ".PDF"
                         ppath = MasterPath & "\"
                         n_url = UCase(ppath) & LnkFl
                         ActiveSheet.Hyperlinks.Add Anchor:=ActiveSheet.Cells(StartRow, linkCol), Address:=n_url
                  End If
            End If
            StartRow = StartRow + 1
    Loop
    
    

End Sub

Sub GenerateCodeforJqueryList()
    leftAlignedCols = "_3_4_5_7_"
    cols2skip = "_14_"
     
     linkCol = 3
      linkColPos = 3
    getpath = InputBox("Enter Path for JQUERY :")
    If Len(getpath) = 0 Then
            End
    End If
    
      TXT_FL = getpath & "\htmlcode.TXT"
    Dim fs As Object
    Set fs = CreateObject("Scripting.FileSystemObject")
    Dim htmlcode As Variant
    Set htmlcode = fs.CreateTextFile(TXT_FL, True)
    rno = InputBox("enter start row (where header starts", , 2)
    wdrow = 1
        col = 1
        RowString = "<thead><tr>"
        Do While True
            divf = "hfont"
            
            If Cells(rno, col) = 0 Then
                    Exit Do
            End If
            
             If linkCol > 0 Then
              If col = linkColPos Then
                    RowString = RowString & "<th width='3%'><div id='hfont'>Link</div></th>"
              End If
            End If
            If InStr(1, cols2skip, "_" & col & "_") > 0 Then
            Else
                    If InStr(1, leftAlignedCols, "_" & col & "_") > 0 Then
                         Ln = "<th width='" & Cells(1, col) & "%'><div id='" & divf & "'>" & Cells(rno, col) & "</div></th>"
                    Else
                        Ln = "<th width='" & Cells(1, col) & "%'><div id='" & divf & "'>" & Cells(rno, col) & "</div></th>"
                    End If
                    RowString = RowString & vbNewLine & Ln
            End If
            col = col + 1
        Loop
        no_cols = col - 1
        RowString = RowString & "</Tr></thead>"
        htmlcode.WriteLine (RowString)
        htmlcode.WriteLine "==================================="
     
       rno = rno + 1
       rootPath = "./DATS/"
    Do While True
        If Cells(rno, 1) = 0 Then
            Exit Do
        End If
        col = 1
        If Mid(Cells(rno, 18), 1, 1) = "Z" Then
            RowString = "<tr bgcolor=green>"
        Else
            RowString = "<tr>"
        End If
         
        For i = 1 To no_cols
             If InStr(1, cols2skip, "_" & i & "_") > 0 Then
             Else
                If i = linkColPos Then
                    lnkFile = rootPath & Cells(rno, linkCol) & ".pdf"
                    hreflnk = "<td 'class='font'><a href='" & lnkFile & "' target='_BLANK'><img src='IMAGES/ICON_PDF.GIF' alt='pdf' title='Open Pdf File' height='19' width='23' border='0' /></a></td>"
                    RowString = RowString & hreflnk
                End If
                dval = Cells(rno, i)
                If InStr(1, leftAlignedCols, "_" & i & "_") > 0 Then
                     RowString = RowString & "<td class='font'>" & dval & "</td>"
                Else
                    RowString = RowString & "<td class='font'>" & dval & "</td>"
                End If
             End If
        Next i
   
        
        RowString = RowString & "</Tr>"
        htmlcode.WriteLine (RowString)
        rno = rno + 1
    Loop
   ' Range("A1").Hyperlinks(1).Address
    'htmlcode.WriteLine (RowString)
    htmlcode.Close
    Set fs = Nothing
    
    
    MsgBox "Done"
    
            
  
    
End Sub

Sub PasswordBreaker()
 
    'Breaks worksheet password protection.
    Dim i As Integer, j As Integer, k As Integer
    Dim l As Integer, m As Integer, n As Integer
    Dim i1 As Integer, i2 As Integer, i3 As Integer
    Dim i4 As Integer, i5 As Integer, i6 As Integer
    On Error Resume Next
    For i = 65 To 66: For j = 65 To 66: For k = 65 To 66
    For l = 65 To 66: For m = 65 To 66: For i1 = 65 To 66
    For i2 = 65 To 66: For i3 = 65 To 66: For i4 = 65 To 66
    For i5 = 65 To 66: For i6 = 65 To 66: For n = 32 To 126
    ActiveSheet.Unprotect Chr(i) & Chr(j) & Chr(k) & _
        Chr(l) & Chr(m) & Chr(i1) & Chr(i2) & Chr(i3) & _
        Chr(i4) & Chr(i5) & Chr(i6) & Chr(n)
    If ActiveSheet.ProtectContents = False Then
         Exit Sub
    End If
    Next: Next: Next: Next: Next: Next
    Next: Next: Next: Next: Next: Next
    On Error GoTo 0
End Sub

Sub countpunches()
    rno = 10
    colno = 6
    pa = 0
    Pb = 0
    pc = 0
    Do While True
        If Cells(rno, colno) = 0 Then
                Exit Do
        End If
        If Cells(rno, colno) = "A" Then
                pa = pa + 1
        End If
        If Cells(rno, colno) = "B" Then
                Pb = Pb + 1
        End If
               If Cells(rno, colno) = "C" Then
                pc = pc + 1
        End If
        

        rno = rno + 1
    Loop
        
           
            Debug.Print "A=" & pa & vbNewLine & "B=" & Pb & vbNewLine & "  C=" & pc
End Sub

Sub cancelfilter()
    On Error Resume Next
    ActiveSheet.ShowAllData
    On Error GoTo 0
End Sub

Sub FORMAT_CLR_PUNCH()
     Dim rng As Range
     tmp_Rowno = Selection.Row
     Set rng = ActiveSheet.Range(Cells(tmp_Rowno, 1), Cells(tmp_Rowno, 21))
     With rng.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorAccent2
        .TintAndShade = 0.599993896298105
        .PatternTintAndShade = 0
    End With
End Sub

Sub FLT()
'
' FLT Macro
'

'
   stxt = ActiveCell.value
    crit = InputBox("Enter Criteria", "Criteria", stxt)
    
   
    ActiveSheet.Range("$A$3:$S$99151").AutoFilter Field:=ActiveCell.Column, Criteria1:="=*" & crit & "*", _
        Operator:=xlAnd
End Sub

Sub INSERTBREAK()
'
' INSERTBREAK Macro
'

'
    ActiveWindow.SelectedSheets.HPageBreaks.Add Before:=ActiveCell
End Sub
Sub Unhide_all()
  For Each ws In ActiveWorkbook.Sheets
        ws.Visible = True
  Next ws
  
End Sub
Sub LIST_FILE_NAMES()
    Dim fs, f, mfolders, mfiles, s
    If ActiveSheet.Cells(1, 1) = "filename" Then
        ppath = InputBox("ENTER PATH ", "PATH FROM WHERE FILES ARE TO BE LISTED")
        ActiveSheet.Range("a2:c500").Clear
        Set fs = CreateObject("Scripting.FileSystemObject")
        Set f = fs.GetFolder(ppath)
        Set fc = f.Files
        RW = 2
        For Each mfiles In fc
           Err.Clear
           p = mfiles.Name
           filepath = mfiles.Path
           fna = Mid(p, 1, InStr(1, p, ".") - 1)
           If Err.Number = 0 Then
             ActiveSheet.Cells(RW, 1) = p
             ActiveSheet.Cells(RW, 16) = get_no_pages_pdf(filepath)
             RW = RW + 1
           End If
        Next mfiles
    End If
    If ActiveSheet.Cells(1, 1) = 0 And ActiveSheet.Name = "Sheet1" Then
        ppath = InputBox("ENTER PATH ", "PATH FROM WHERE FILES ARE TO BE LISTED")
        
        Set fs = CreateObject("Scripting.FileSystemObject")
        Set f = fs.GetFolder(ppath)
        Set fc = f.Files
        RW = 1
        ActiveSheet.Cells(RW, 1) = "filename"
        ActiveSheet.Cells(RW, 2) = "path"
        ActiveSheet.Cells(RW, 3) = "newname"
        RW = RW + 1
        For Each mfiles In fc
           Err.Clear
           p = mfiles.Name
           filepath = mfiles.Path
           fna = Mid(p, 1, InStr(1, p, ".") - 1)
           If Err.Number = 0 Then
             ActiveSheet.Cells(RW, 1) = p
             ActiveSheet.Cells(RW, 2) = UCase(ppath)
             RW = RW + 1
           End If
        Next mfiles
    End If
    If UCase(ActiveSheet.Name) = "PAGESIZE" Then
        ppath = InputBox("ENTER PATH ", "PATH FROM WHERE FILES ARE TO BE LISTED")
        
        Set fs = CreateObject("Scripting.FileSystemObject")
        Set f = fs.GetFolder(ppath)
        Set fc = f.Files
        RW = 2
        For Each mfiles In fc
           Err.Clear
           p = mfiles.Name
           filepath = mfiles.Path
           fna = Mid(p, 1, InStr(1, p, ".") - 1)
           If Err.Number = 0 Then
             ActiveSheet.Cells(RW, 1) = UCase(fna)
             ActiveSheet.Cells(RW, 8) = get_no_pages_pdf(filepath)
             RW = RW + 1
           End If
        Next mfiles
    End If
End Sub

Sub UPDATE_REQUEST_FORM()
     If UCase(ActiveSheet.Name) = "REQUEST" Then
        ppath = InputBox("ENTER PATH ", "PATH FROM WHERE FILES ARE TO BE LISTED")
        Set fs = CreateObject("Scripting.FileSystemObject")
        Set f = fs.GetFolder(ppath)
        Set fc = f.Files
        RW = 2
        For Each mfiles In fc
           Err.Clear
           p = mfiles.Name
           filepath = mfiles.Path
           fna = Mid(p, 1, InStr(1, p, ".") - 1)
           If Err.Number = 0 Then
             ActiveSheet.Cells(RW, 5) = UCase(fna)
             ActiveSheet.Cells(RW, 15) = get_no_pages_pdf(filepath)
             RW = RW + 1
           End If
        Next mfiles
    End If
End Sub
Function get_no_pages_pdf(pdffile)
    pA4 = 0
    pA3 = 0
    pA2 = 0
    pA1 = 0
    pA0 = 0
        Dim pdpage As Acrobat.AcroPDPage
        Dim ac_fi As Acrobat.AcroPDDoc
        Set ac_fi = New Acrobat.AcroPDDoc
        ac_fi.Open pdffile
        num_pages = ac_fi.GetNumPages
 
    
        If ActiveSheet.Name = "REQUEST" Then
             
        For i = 0 To num_pages - 1
             Set pdpage = ac_fi.AcquirePage(i)
             w = Round(pdpage.GetSize.x / 72, 1)
             h = Round(pdpage.GetSize.y / 72, 1)
             
             If ((w = 8.3 And h = 11.7) Or (w = 11.7 And h = 8.3)) Or ((w = 8.5 And h = 11#) Or (w = 11# And h = 8.5)) Then
                    pA4 = pA4 + 1
             End If
             
                      
             If (w = 23.4 And h = 33.1) Or (w = 33.1 And h = 23.4) Then
                    pA1 = pA1 + 1
             End If
             
              If (w = 16.5 And h = 23.4) Or (w = 23.4 And h = 16.5) Then
                    pA2 = pA2 + 1
             End If
             
             If (w = 33.1 And h = 46.8) Or (w = 46.8 And h = 33.1) Then
                    pA0 = pA0 + 1
             End If
              If (w = 11.7 And h = 16.5) Or (w = 16.5 And h = 11.7) Then
                    pA3 = pA3 + 1
             End If
            
        Next i
             ActiveSheet.Cells(RW, 8) = pA4
             ActiveSheet.Cells(RW, 9) = pA3
              ActiveSheet.Cells(RW, 10) = pA2
               ActiveSheet.Cells(RW, 11) = pA1
               ActiveSheet.Cells(RW, 12) = pA0
        End If
        ac_fi.Close
        Set ac_fi = Nothing
        get_no_pages_pdf = num_pages
End Function


Sub GetTagNoFromPDF()
        Range("C4:C1000").Clear
        Dim pdffile As String
        R = 4
        Do While True
            DoEvents
            Cells(R, 1).Select
            
            If Cells(R, 1) = 0 Then
                    Exit Do
            End If
            pdffile = Cells(R, 2) & "\" & Cells(R, 1)
            
         STRG = ReadAcrobatDocument(pdffile)
         STRG = Replace(STRG, " ", "")
         If InStr(1, STRG, "17-") > 0 Then
            x = 1
            nstrg = Mid(STRG, InStr(1, STRG, "17-"))
            DONE = False
            Do While True
                    DONE = True
                    If Mid(nstrg, 4, 1) = "A" Or Mid(nstrg, 4, 2) = "C1" Or Mid(nstrg, 4, 2) = "Q3" Or Mid(nstrg, 4, 2) = "GE" Or Mid(nstrg, 4, 2) = "DT" Or Mid(nstrg, 4, 2) = "SU" Or Mid(nstrg, 4, 1) = "M" Or Mid(nstrg, 4, 1) = "E" Or Mid(nstrg, 4, 2) = "C-" Or Mid(nstrg, 4, 2) = "D-" Or Mid(nstrg, 4, 2) = "V-" Or Mid(nstrg, 4, 2) = "F-" Or Mid(nstrg, 4, 2) = "G-" Then
                         If Len(nstrg) < 6 Then
                                nstrg = Mid(nstrg, InStr(2, nstrg, "17-"))
                          Else
                               nstrg = Mid(nstrg, InStr(6, nstrg, "17-"))
                          End If
                        DONE = False
                    End If
                    If IsNumeric(Mid(nstrg, 4, 1)) Then
                        If Len(nstrg) < 6 Then
                            nstrg = Mid(nstrg, InStr(2, nstrg, "17-"))
                        Else
                            nstrg = Mid(nstrg, InStr(6, nstrg, "17-"))
                        End If
                        DONE = False
                    End If
                    
                    
                    If DONE Then
                        Exit Do
                    End If
                     
            Loop
            
            For i = 1 To Len(nstrg)
                    Debug.Print Asc(Mid(nstrg, i, 1)) & "=" & Mid(nstrg, i, 1)
                    If Asc(Mid(nstrg, i, 1)) = 13 Or Asc(Mid(nstrg, i, 1)) = 32 Then
                            nstrg = Mid(nstrg, 1, i - 1)
                            Exit For
                    End If
            Next i
            Cells(R, 3) = nstrg
         End If
         R = R + 1
        Loop
         
End Sub
Sub RenameFiles()
R = 2
Set fs = CreateObject("Scripting.FileSystemObject")

 Do While True
    If Cells(R, 1) = 0 Then
    Exit Do
    End If
    pp = Cells(R, 2)
    fn = Cells(R, 1)
    NFN = Cells(R, 3)
    
    TEMP_FOLDER = t_path
    
    SRC = "'" & pp & "\" & fn & "'"
    Set Tfile = fs.GetFile(SRC)
    If UCase(Tfile.Name) <> UCase(NFN) Then
     Tfile.Name = NFN
    End If
    Set Tfile = Nothing
    R = R + 1
  Loop
End Sub

Sub GenerateCopies()
 
tpath = InputBox("enter target path:")
SRC = tpath & "\1.pdf"
For Each CL In Selection
 
    If CL.value = 0 Then
    Exit For
    End If
    fn = CL.value
    
    TEMP_FOLDER = "C:\Users\ig\Desktop\ST\" & fn & ".pdf"
    
    On Error Resume Next
    FileCopy SRC, TEMP_FOLDER
    If Err.Number > 0 Then
    Cells(R, 6).value = Err.Description
    Else
    Cells(R, 6).value = "done!"
    End If
    Err.Clear
 Next CL
End Sub

